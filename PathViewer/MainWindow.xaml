<Window
  x:Class="PathViewer.MainWindow"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:vm="clr-namespace:PathViewer"
  Title="PathViewer"
  MinWidth="640" MinHeight="480"
  Width="1024" Height="1024"
  WindowStartupLocation="CenterScreen">
  <Window.Resources>
    <Style x:Key="CommandItemTemplate" TargetType="{x:Type ListBoxItem}">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ListBoxItem}">
            <Border x:Name="ItemBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
              <Border.InputBindings>
                <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.EditCommand}" />
              </Border.InputBindings>
              <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="IsSelected" Value="true">
                <Setter Property="Background" TargetName="ItemBorder" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
              </Trigger>
              <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
  </Window.Resources>
  <Window.DataContext>
    <vm:PathViewModel />
  </Window.DataContext>
  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto" />
      <RowDefinition Height="Auto" />
      <RowDefinition />
      <RowDefinition Height="Auto" />
    </Grid.RowDefinitions>
    <ToolBar>
      <TextBlock VerticalAlignment="Center" Margin="2 0">Stroke</TextBlock>
      <ComboBox ItemsSource="{Binding ColorsList}" SelectedValue="{Binding StrokeColor}" Margin="2 0">
        <ComboBox.ItemTemplate>
          <DataTemplate>
            <StackPanel Orientation="Horizontal">
              <Rectangle Fill="{Binding}" Stroke="Black" Width="16" Height="16" Margin="0 2 4 2" />
              <TextBlock Text="{Binding}" VerticalAlignment="Center" />
            </StackPanel>
          </DataTemplate>
        </ComboBox.ItemTemplate>
      </ComboBox>
      <ComboBox ItemsSource="{Binding Thicknesses}" SelectedValue="{Binding StrokeThickness}" Margin="2 0" />
      <Separator />
      <TextBlock VerticalAlignment="Center" Margin="2 0">Fill</TextBlock>
      <ComboBox ItemsSource="{Binding ColorsList}" SelectedValue="{Binding FillColor}" Margin="2 0">
        <ComboBox.ItemTemplate>
          <DataTemplate>
            <StackPanel Orientation="Horizontal">
              <Rectangle Fill="{Binding}" Stroke="Black" Width="16" Height="16" Margin="0 2 4 2" />
              <TextBlock Text="{Binding}" VerticalAlignment="Center" />
            </StackPanel>
          </DataTemplate>
        </ComboBox.ItemTemplate>
      </ComboBox>
      <Separator />
      <CheckBox Width="Auto" Content="Show Origin Lines" IsChecked="{Binding ShowOriginLines}" />
      <CheckBox Width="Auto" Content="Show Bounding Box" IsChecked="{Binding ShowBoundingBox}" />
    </ToolBar>
    <DockPanel Grid.Row="1">
      <ToolBar DockPanel.Dock="Top" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch">
        <ToolBar.Resources>
          <Style TargetType="ToolBarPanel">
            <Setter Property="Orientation" Value="Vertical" />
          </Style>
        </ToolBar.Resources>
        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition />
          </Grid.ColumnDefinitions>
          <TextBlock>Data</TextBlock>
          <TextBox
            Grid.Column="1"
            BorderBrush="DarkGray"
            HorizontalAlignment="Stretch"
            BorderThickness="1"
            Text="{Binding Data, UpdateSourceTrigger=PropertyChanged}"
            AcceptsReturn="True"
            TextWrapping="Wrap"
            Padding="4" />
        </Grid>
      </ToolBar>
    </DockPanel>
    <Grid Grid.Row="2">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition />
      </Grid.ColumnDefinitions>
      <Grid>
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto" />
          <RowDefinition />
          <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <TextBlock>Path Commands</TextBlock>
        <ListBox ItemContainerStyle="{DynamicResource CommandItemTemplate}" Grid.Row="1"
          ItemsSource="{Binding PathCommands}"
          SelectedItem="{Binding SelectedItem, Mode=TwoWay}"
          SelectedIndex="{Binding SelectedIndex,Mode=TwoWay}"
          VerticalAlignment="Stretch">
        </ListBox>
        <ToolBar Grid.Row="2">
          <Button
            Style="{StaticResource iconButton}" Content="&#xe109;"
            ToolTip="Adds a new item to the data collection."
            Command="{Binding AddItemCommand}" />
          <Button
            Style="{StaticResource iconButton}" Content="&#xe291;"
            ToolTip="Inserts a new item to the data collection before the current selection."
            Command="{Binding InsertItemCommand}" />
          <Button
            Style="{StaticResource iconButton}" Content="&#xe107;"
            ToolTip="Remove the selected item from the data collection."
            Command="{Binding DeleteCommand}" />
          <Button
            Style="{StaticResource iconButton}" Content="&#xe104;"
            ToolTip="Edit the selected item."
            Command="{Binding EditCommand}" />
          <Button
            Style="{StaticResource iconButton}" Content="&#xe106;"
            ToolTip="Remove all items from the data collection."
            Command="{Binding ClearCommand}" />
          <Button
            Style="{StaticResource iconButton}" Content="&#xe110;"
            ToolTip="Move the selected item up in the data collection."
            Command="{Binding MoveUpCommand}" />
          <Button
            Style="{StaticResource iconButton}" Content="&#xe1fd;"
            ToolTip="Move the selected item down in the data collection."
            Command="{Binding MoveDownCommand}" />
          <Button
            Style="{StaticResource iconButton}" Content="&#xe1c8;"
            ToolTip="Resize the entire path."
            Command="{Binding ScalePathCommand}" />
          <Button
            Style="{StaticResource iconButton}" Content="&#xe8ab;"
            ToolTip="Move the entire path (relative to current position)."
            Command="{Binding MovePathCommand}" />
        </ToolBar>
      </Grid>
      <ScrollViewer
        Width="{Binding ViewportSize.Width, Mode=OneWayToSource}"
        Height="{Binding ViewportSize.Height, Mode=OneWayToSource}"
        HorizontalScrollBarVisibility="Auto"
        VerticalScrollBarVisibility="Auto" Grid.ColumnSpan="2" Margin="257,0,1,0">
        <Grid Margin="0">
          <Border
            BorderBrush="Red" BorderThickness="10"
            Visibility="{Binding PathError,Converter={StaticResource ValueConverter}}"
            Width="{Binding RelativeSource={RelativeSource AncestorType=ScrollViewer}, Path=ActualWidth}"
            Height="{Binding RelativeSource={RelativeSource AncestorType=ScrollViewer}, Path=ActualHeight}"
            MinWidth="{Binding CanvasSize.Width}"
            MinHeight="{Binding CanvasSize.Height}">
            <StackPanel Orientation="Vertical">
              <TextBlock
                Text="Error Parsing Path"
                HorizontalAlignment="Center" FontSize="24" />
              <TextBlock
                Text="{Binding PathError, StringFormat=[{0}]}" FontSize="16"
                HorizontalAlignment="Center" TextWrapping="WrapWithOverflow" />
            </StackPanel>
          </Border>
          <Canvas
            Visibility="{Binding PathError, Converter={StaticResource ValueConverter}, ConverterParameter=reverse}"
            Width="{Binding RelativeSource={RelativeSource AncestorType=ScrollViewer}, Path=ActualWidth}"
            Height="{Binding RelativeSource={RelativeSource AncestorType=ScrollViewer}, Path=ActualHeight}"
            MinWidth="{Binding CanvasSize.Width}"
            MinHeight="{Binding CanvasSize.Height}"
            HorizontalAlignment="Left" VerticalAlignment="Top">
            <Canvas.LayoutTransform>
              <ScaleTransform ScaleX="{Binding Zoom}" ScaleY="{Binding Zoom}" />
            </Canvas.LayoutTransform>
            <Line Stroke="Red" StrokeDashArray="4 8"
              Canvas.Top="{Binding ZeroOrigin.Y}"
              Visibility="{Binding ShowOriginLines, Converter={StaticResource ValueConverter}}"
              X1="0" X2="{Binding RelativeSource={RelativeSource AncestorType=Canvas},Path=ActualWidth}" />
            <Line Stroke="Red" StrokeDashArray="4 8"
              Canvas.Left="{Binding ZeroOrigin.X}"
              Visibility="{Binding ShowOriginLines, Converter={StaticResource ValueConverter}}"
              Y1="0" Y2="{Binding RelativeSource={RelativeSource AncestorType=Canvas},Path=ActualHeight}" />
            <Canvas>
              <TextBlock
                Canvas.Left="{Binding LeftLabel}" Canvas.Top="{Binding TopLabel}"
                Visibility="{Binding ShowBoundingBox, Converter={StaticResource ValueConverter}}">
                <TextBlock.Text>
                  <MultiBinding StringFormat="({0:0.##}, {1:0.##})">
                    <Binding Path="Bounds.Left" Mode="OneWay" />
                    <Binding Path="Bounds.Top" Mode="OneWay" />
                  </MultiBinding>
                </TextBlock.Text>
              </TextBlock>
              <TextBlock
                Canvas.Left="{Binding RightLabel}" Canvas.Top="{Binding TopLabel}"
                Visibility="{Binding ShowBoundingBox, Converter={StaticResource ValueConverter}}">
                <TextBlock.Text>
                  <MultiBinding StringFormat="({0:0.##}, {1:0.##})">
                    <Binding Path="Bounds.Right" Mode="OneWay" />
                    <Binding Path="Bounds.Top" Mode="OneWay" />
                  </MultiBinding>
                </TextBlock.Text>
              </TextBlock>
              <TextBlock
                Canvas.Left="{Binding LeftLabel}" Canvas.Top="{Binding BottomLabel}"
                Visibility="{Binding ShowBoundingBox, Converter={StaticResource ValueConverter}}">
                <TextBlock.Text>
                  <MultiBinding StringFormat="({0:0.##}, {1:0.##})">
                    <Binding Path="Bounds.Left" Mode="OneWay" />
                    <Binding Path="Bounds.Bottom" Mode="OneWay" />
                  </MultiBinding>
                </TextBlock.Text>
              </TextBlock>
              <TextBlock
                Canvas.Left="{Binding RightLabel}" Canvas.Top="{Binding BottomLabel}"
                Visibility="{Binding ShowBoundingBox, Converter={StaticResource ValueConverter}}">
                <TextBlock.Text>
                  <MultiBinding StringFormat="({0:0.##}, {1:0.##})">
                    <Binding Path="Bounds.Right" Mode="OneWay" />
                    <Binding Path="Bounds.Bottom" Mode="OneWay" />
                  </MultiBinding>
                </TextBlock.Text>
              </TextBlock>
              <Rectangle Stroke="Blue"
                Visibility="{Binding ShowBoundingBox, Converter={StaticResource ValueConverter}}"
                Canvas.Left="{Binding PathMargin}"
                Canvas.Top="{Binding PathMargin}"
                Width="{Binding Bounds.Width}"
                Height="{Binding Bounds.Height}"
                StrokeThickness=".2" StrokeDashArray="32 32"
                SnapsToDevicePixels="True"/>
              <Path  Canvas.Left="{Binding PathStartX}"
                Canvas.Top="{Binding PathStartY}"
                Stroke="{Binding StrokeColor}"
                StrokeThickness="{Binding StrokeThickness}"
                Fill="{Binding FillColor}"
                Data="{Binding Data}">
              </Path>
            </Canvas>
          </Canvas>
        </Grid>
      </ScrollViewer>
    </Grid>
    <StatusBar Grid.Row="3" HorizontalAlignment="Stretch">
      <StatusBar.ItemsPanel>
        <ItemsPanelTemplate>
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
          </Grid>
        </ItemsPanelTemplate>
      </StatusBar.ItemsPanel>
      <StatusBarItem>
        <StackPanel Orientation="Horizontal">
          <TextBlock Text="{Binding Bounds.Width, StringFormat=Path Size: ({0:0.##}\, }" />
          <TextBlock Text="{Binding Bounds.Height, StringFormat={}{0:0.##})}" />
        </StackPanel>
      </StatusBarItem>
      <Separator Grid.Column="1" />
      <StatusBarItem Grid.Column="2">
        <StackPanel Orientation="Horizontal">
          <TextBlock Text="{Binding Bounds.X, StringFormat=Path Origin: ({0:0.##}\, }" />
          <TextBlock Text="{Binding Bounds.Y, StringFormat={}{0:0.##})}" />
        </StackPanel>
      </StatusBarItem>
      <Separator Grid.Column="3" />
      <StatusBarItem Grid.Column="4">
        <StackPanel Orientation="Horizontal">
          <TextBlock Text="{Binding Bounds.Right, StringFormat=Path Extent: ({0:0.##}\, }" />
          <TextBlock Text="{Binding Bounds.Bottom, StringFormat={}{0:0.##})}" />
        </StackPanel>
      </StatusBarItem>
      <Separator Grid.Column="5" />

      <Separator Grid.Column="7" />
      <StatusBarItem Grid.Column="8">
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
          <Separator />
          <TextBlock VerticalAlignment="Center" Margin="2 0">Zoom</TextBlock>
          <Slider Orientation="Horizontal" Width="140" Minimum="0.01" Maximum="8.0" LargeChange="0.25" SmallChange="0.01" Value="{Binding Zoom}" VerticalAlignment="Center" />
          <TextBlock VerticalAlignment="Center" Text="{Binding Zoom, StringFormat=P}" Margin="2 0" />
          <Button Command="{Binding ResetZoomCommand}" Width="Auto" Height="Auto">
            <Button.Content>
              <TextBlock FontSize="12" FontFamily="Segoe MDL2 Assets">&#xe72c;</TextBlock>
            </Button.Content>
          </Button>
        </StackPanel>
      </StatusBarItem>
    </StatusBar>
  </Grid>
</Window>
